// Code generated by protoc-gen-go.
// source: messages.proto
// DO NOT EDIT!

package mesos_internal

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"
import mesos "mesos.pb"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type StatusUpdateRecord_Type int32

const (
	StatusUpdateRecord_UPDATE StatusUpdateRecord_Type = 0
	StatusUpdateRecord_ACK    StatusUpdateRecord_Type = 1
)

var StatusUpdateRecord_Type_name = map[int32]string{
	0: "UPDATE",
	1: "ACK",
}
var StatusUpdateRecord_Type_value = map[string]int32{
	"UPDATE": 0,
	"ACK":    1,
}

func (x StatusUpdateRecord_Type) Enum() *StatusUpdateRecord_Type {
	p := new(StatusUpdateRecord_Type)
	*p = x
	return p
}
func (x StatusUpdateRecord_Type) String() string {
	return proto.EnumName(StatusUpdateRecord_Type_name, int32(x))
}
func (x *StatusUpdateRecord_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(StatusUpdateRecord_Type_value, data, "StatusUpdateRecord_Type")
	if err != nil {
		return err
	}
	*x = StatusUpdateRecord_Type(value)
	return nil
}

type Task struct {
	Name             *string             `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	TaskId           *mesos.TaskID       `protobuf:"bytes,2,req,name=task_id" json:"task_id,omitempty"`
	FrameworkId      *mesos.FrameworkID  `protobuf:"bytes,3,req,name=framework_id" json:"framework_id,omitempty"`
	ExecutorId       *mesos.ExecutorID   `protobuf:"bytes,4,opt,name=executor_id" json:"executor_id,omitempty"`
	SlaveId          *mesos.SlaveID      `protobuf:"bytes,5,req,name=slave_id" json:"slave_id,omitempty"`
	State            *mesos.TaskState    `protobuf:"varint,6,req,name=state,enum=mesos.TaskState" json:"state,omitempty"`
	Resources        []*mesos.Resource   `protobuf:"bytes,7,rep,name=resources" json:"resources,omitempty"`
	Statuses         []*mesos.TaskStatus `protobuf:"bytes,8,rep,name=statuses" json:"statuses,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}

func (m *Task) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Task) GetTaskId() *mesos.TaskID {
	if m != nil {
		return m.TaskId
	}
	return nil
}

func (m *Task) GetFrameworkId() *mesos.FrameworkID {
	if m != nil {
		return m.FrameworkId
	}
	return nil
}

func (m *Task) GetExecutorId() *mesos.ExecutorID {
	if m != nil {
		return m.ExecutorId
	}
	return nil
}

func (m *Task) GetSlaveId() *mesos.SlaveID {
	if m != nil {
		return m.SlaveId
	}
	return nil
}

func (m *Task) GetState() mesos.TaskState {
	if m != nil && m.State != nil {
		return *m.State
	}
	return mesos.TaskState_TASK_STAGING
}

func (m *Task) GetResources() []*mesos.Resource {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *Task) GetStatuses() []*mesos.TaskStatus {
	if m != nil {
		return m.Statuses
	}
	return nil
}

type RoleInfo struct {
	Name             *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Weight           *float64 `protobuf:"fixed64,2,opt,name=weight,def=1" json:"weight,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *RoleInfo) Reset()         { *m = RoleInfo{} }
func (m *RoleInfo) String() string { return proto.CompactTextString(m) }
func (*RoleInfo) ProtoMessage()    {}

const Default_RoleInfo_Weight float64 = 1

func (m *RoleInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *RoleInfo) GetWeight() float64 {
	if m != nil && m.Weight != nil {
		return *m.Weight
	}
	return Default_RoleInfo_Weight
}

type StatusUpdate struct {
	FrameworkId      *mesos.FrameworkID `protobuf:"bytes,1,req,name=framework_id" json:"framework_id,omitempty"`
	ExecutorId       *mesos.ExecutorID  `protobuf:"bytes,2,opt,name=executor_id" json:"executor_id,omitempty"`
	SlaveId          *mesos.SlaveID     `protobuf:"bytes,3,opt,name=slave_id" json:"slave_id,omitempty"`
	Status           *mesos.TaskStatus  `protobuf:"bytes,4,req,name=status" json:"status,omitempty"`
	Timestamp        *float64           `protobuf:"fixed64,5,req,name=timestamp" json:"timestamp,omitempty"`
	Uuid             []byte             `protobuf:"bytes,6,req,name=uuid" json:"uuid,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *StatusUpdate) Reset()         { *m = StatusUpdate{} }
func (m *StatusUpdate) String() string { return proto.CompactTextString(m) }
func (*StatusUpdate) ProtoMessage()    {}

func (m *StatusUpdate) GetFrameworkId() *mesos.FrameworkID {
	if m != nil {
		return m.FrameworkId
	}
	return nil
}

func (m *StatusUpdate) GetExecutorId() *mesos.ExecutorID {
	if m != nil {
		return m.ExecutorId
	}
	return nil
}

func (m *StatusUpdate) GetSlaveId() *mesos.SlaveID {
	if m != nil {
		return m.SlaveId
	}
	return nil
}

func (m *StatusUpdate) GetStatus() *mesos.TaskStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *StatusUpdate) GetTimestamp() float64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *StatusUpdate) GetUuid() []byte {
	if m != nil {
		return m.Uuid
	}
	return nil
}

type StatusUpdateRecord struct {
	Type             *StatusUpdateRecord_Type `protobuf:"varint,1,req,name=type,enum=mesos.internal.StatusUpdateRecord_Type" json:"type,omitempty"`
	Update           *StatusUpdate            `protobuf:"bytes,2,opt,name=update" json:"update,omitempty"`
	Uuid             []byte                   `protobuf:"bytes,3,opt,name=uuid" json:"uuid,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *StatusUpdateRecord) Reset()         { *m = StatusUpdateRecord{} }
func (m *StatusUpdateRecord) String() string { return proto.CompactTextString(m) }
func (*StatusUpdateRecord) ProtoMessage()    {}

func (m *StatusUpdateRecord) GetType() StatusUpdateRecord_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return StatusUpdateRecord_UPDATE
}

func (m *StatusUpdateRecord) GetUpdate() *StatusUpdate {
	if m != nil {
		return m.Update
	}
	return nil
}

func (m *StatusUpdateRecord) GetUuid() []byte {
	if m != nil {
		return m.Uuid
	}
	return nil
}

type SubmitSchedulerRequest struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SubmitSchedulerRequest) Reset()         { *m = SubmitSchedulerRequest{} }
func (m *SubmitSchedulerRequest) String() string { return proto.CompactTextString(m) }
func (*SubmitSchedulerRequest) ProtoMessage()    {}

func (m *SubmitSchedulerRequest) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type SubmitSchedulerResponse struct {
	Okay             *bool  `protobuf:"varint,1,req,name=okay" json:"okay,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SubmitSchedulerResponse) Reset()         { *m = SubmitSchedulerResponse{} }
func (m *SubmitSchedulerResponse) String() string { return proto.CompactTextString(m) }
func (*SubmitSchedulerResponse) ProtoMessage()    {}

func (m *SubmitSchedulerResponse) GetOkay() bool {
	if m != nil && m.Okay != nil {
		return *m.Okay
	}
	return false
}

type ExecutorToFrameworkMessage struct {
	SlaveId          *mesos.SlaveID     `protobuf:"bytes,1,req,name=slave_id" json:"slave_id,omitempty"`
	FrameworkId      *mesos.FrameworkID `protobuf:"bytes,2,req,name=framework_id" json:"framework_id,omitempty"`
	ExecutorId       *mesos.ExecutorID  `protobuf:"bytes,3,req,name=executor_id" json:"executor_id,omitempty"`
	Data             []byte             `protobuf:"bytes,4,req,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *ExecutorToFrameworkMessage) Reset()         { *m = ExecutorToFrameworkMessage{} }
func (m *ExecutorToFrameworkMessage) String() string { return proto.CompactTextString(m) }
func (*ExecutorToFrameworkMessage) ProtoMessage()    {}

func (m *ExecutorToFrameworkMessage) GetSlaveId() *mesos.SlaveID {
	if m != nil {
		return m.SlaveId
	}
	return nil
}

func (m *ExecutorToFrameworkMessage) GetFrameworkId() *mesos.FrameworkID {
	if m != nil {
		return m.FrameworkId
	}
	return nil
}

func (m *ExecutorToFrameworkMessage) GetExecutorId() *mesos.ExecutorID {
	if m != nil {
		return m.ExecutorId
	}
	return nil
}

func (m *ExecutorToFrameworkMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type FrameworkToExecutorMessage struct {
	SlaveId          *mesos.SlaveID     `protobuf:"bytes,1,req,name=slave_id" json:"slave_id,omitempty"`
	FrameworkId      *mesos.FrameworkID `protobuf:"bytes,2,req,name=framework_id" json:"framework_id,omitempty"`
	ExecutorId       *mesos.ExecutorID  `protobuf:"bytes,3,req,name=executor_id" json:"executor_id,omitempty"`
	Data             []byte             `protobuf:"bytes,4,req,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *FrameworkToExecutorMessage) Reset()         { *m = FrameworkToExecutorMessage{} }
func (m *FrameworkToExecutorMessage) String() string { return proto.CompactTextString(m) }
func (*FrameworkToExecutorMessage) ProtoMessage()    {}

func (m *FrameworkToExecutorMessage) GetSlaveId() *mesos.SlaveID {
	if m != nil {
		return m.SlaveId
	}
	return nil
}

func (m *FrameworkToExecutorMessage) GetFrameworkId() *mesos.FrameworkID {
	if m != nil {
		return m.FrameworkId
	}
	return nil
}

func (m *FrameworkToExecutorMessage) GetExecutorId() *mesos.ExecutorID {
	if m != nil {
		return m.ExecutorId
	}
	return nil
}

func (m *FrameworkToExecutorMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type RegisterFrameworkMessage struct {
	Framework        *mesos.FrameworkInfo `protobuf:"bytes,1,req,name=framework" json:"framework,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *RegisterFrameworkMessage) Reset()         { *m = RegisterFrameworkMessage{} }
func (m *RegisterFrameworkMessage) String() string { return proto.CompactTextString(m) }
func (*RegisterFrameworkMessage) ProtoMessage()    {}

func (m *RegisterFrameworkMessage) GetFramework() *mesos.FrameworkInfo {
	if m != nil {
		return m.Framework
	}
	return nil
}

type ReregisterFrameworkMessage struct {
	Framework        *mesos.FrameworkInfo `protobuf:"bytes,2,req,name=framework" json:"framework,omitempty"`
	Failover         *bool                `protobuf:"varint,3,req,name=failover" json:"failover,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *ReregisterFrameworkMessage) Reset()         { *m = ReregisterFrameworkMessage{} }
func (m *ReregisterFrameworkMessage) String() string { return proto.CompactTextString(m) }
func (*ReregisterFrameworkMessage) ProtoMessage()    {}

func (m *ReregisterFrameworkMessage) GetFramework() *mesos.FrameworkInfo {
	if m != nil {
		return m.Framework
	}
	return nil
}

func (m *ReregisterFrameworkMessage) GetFailover() bool {
	if m != nil && m.Failover != nil {
		return *m.Failover
	}
	return false
}

type FrameworkRegisteredMessage struct {
	FrameworkId      *mesos.FrameworkID `protobuf:"bytes,1,req,name=framework_id" json:"framework_id,omitempty"`
	MasterInfo       *mesos.MasterInfo  `protobuf:"bytes,2,req,name=master_info" json:"master_info,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *FrameworkRegisteredMessage) Reset()         { *m = FrameworkRegisteredMessage{} }
func (m *FrameworkRegisteredMessage) String() string { return proto.CompactTextString(m) }
func (*FrameworkRegisteredMessage) ProtoMessage()    {}

func (m *FrameworkRegisteredMessage) GetFrameworkId() *mesos.FrameworkID {
	if m != nil {
		return m.FrameworkId
	}
	return nil
}

func (m *FrameworkRegisteredMessage) GetMasterInfo() *mesos.MasterInfo {
	if m != nil {
		return m.MasterInfo
	}
	return nil
}

type FrameworkReregisteredMessage struct {
	FrameworkId      *mesos.FrameworkID `protobuf:"bytes,1,req,name=framework_id" json:"framework_id,omitempty"`
	MasterInfo       *mesos.MasterInfo  `protobuf:"bytes,2,req,name=master_info" json:"master_info,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *FrameworkReregisteredMessage) Reset()         { *m = FrameworkReregisteredMessage{} }
func (m *FrameworkReregisteredMessage) String() string { return proto.CompactTextString(m) }
func (*FrameworkReregisteredMessage) ProtoMessage()    {}

func (m *FrameworkReregisteredMessage) GetFrameworkId() *mesos.FrameworkID {
	if m != nil {
		return m.FrameworkId
	}
	return nil
}

func (m *FrameworkReregisteredMessage) GetMasterInfo() *mesos.MasterInfo {
	if m != nil {
		return m.MasterInfo
	}
	return nil
}

type UnregisterFrameworkMessage struct {
	FrameworkId      *mesos.FrameworkID `protobuf:"bytes,1,req,name=framework_id" json:"framework_id,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *UnregisterFrameworkMessage) Reset()         { *m = UnregisterFrameworkMessage{} }
func (m *UnregisterFrameworkMessage) String() string { return proto.CompactTextString(m) }
func (*UnregisterFrameworkMessage) ProtoMessage()    {}

func (m *UnregisterFrameworkMessage) GetFrameworkId() *mesos.FrameworkID {
	if m != nil {
		return m.FrameworkId
	}
	return nil
}

type DeactivateFrameworkMessage struct {
	FrameworkId      *mesos.FrameworkID `protobuf:"bytes,1,req,name=framework_id" json:"framework_id,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *DeactivateFrameworkMessage) Reset()         { *m = DeactivateFrameworkMessage{} }
func (m *DeactivateFrameworkMessage) String() string { return proto.CompactTextString(m) }
func (*DeactivateFrameworkMessage) ProtoMessage()    {}

func (m *DeactivateFrameworkMessage) GetFrameworkId() *mesos.FrameworkID {
	if m != nil {
		return m.FrameworkId
	}
	return nil
}

type ResourceRequestMessage struct {
	FrameworkId      *mesos.FrameworkID `protobuf:"bytes,1,req,name=framework_id" json:"framework_id,omitempty"`
	Requests         []*mesos.Request   `protobuf:"bytes,2,rep,name=requests" json:"requests,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *ResourceRequestMessage) Reset()         { *m = ResourceRequestMessage{} }
func (m *ResourceRequestMessage) String() string { return proto.CompactTextString(m) }
func (*ResourceRequestMessage) ProtoMessage()    {}

func (m *ResourceRequestMessage) GetFrameworkId() *mesos.FrameworkID {
	if m != nil {
		return m.FrameworkId
	}
	return nil
}

func (m *ResourceRequestMessage) GetRequests() []*mesos.Request {
	if m != nil {
		return m.Requests
	}
	return nil
}

type ResourceOffersMessage struct {
	Offers           []*mesos.Offer `protobuf:"bytes,1,rep,name=offers" json:"offers,omitempty"`
	Pids             []string       `protobuf:"bytes,2,rep,name=pids" json:"pids,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *ResourceOffersMessage) Reset()         { *m = ResourceOffersMessage{} }
func (m *ResourceOffersMessage) String() string { return proto.CompactTextString(m) }
func (*ResourceOffersMessage) ProtoMessage()    {}

func (m *ResourceOffersMessage) GetOffers() []*mesos.Offer {
	if m != nil {
		return m.Offers
	}
	return nil
}

func (m *ResourceOffersMessage) GetPids() []string {
	if m != nil {
		return m.Pids
	}
	return nil
}

type LaunchTasksMessage struct {
	FrameworkId      *mesos.FrameworkID `protobuf:"bytes,1,req,name=framework_id" json:"framework_id,omitempty"`
	OfferId          *mesos.OfferID     `protobuf:"bytes,2,req,name=offer_id" json:"offer_id,omitempty"`
	Tasks            []*mesos.TaskInfo  `protobuf:"bytes,3,rep,name=tasks" json:"tasks,omitempty"`
	Filters          *mesos.Filters     `protobuf:"bytes,5,req,name=filters" json:"filters,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *LaunchTasksMessage) Reset()         { *m = LaunchTasksMessage{} }
func (m *LaunchTasksMessage) String() string { return proto.CompactTextString(m) }
func (*LaunchTasksMessage) ProtoMessage()    {}

func (m *LaunchTasksMessage) GetFrameworkId() *mesos.FrameworkID {
	if m != nil {
		return m.FrameworkId
	}
	return nil
}

func (m *LaunchTasksMessage) GetOfferId() *mesos.OfferID {
	if m != nil {
		return m.OfferId
	}
	return nil
}

func (m *LaunchTasksMessage) GetTasks() []*mesos.TaskInfo {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *LaunchTasksMessage) GetFilters() *mesos.Filters {
	if m != nil {
		return m.Filters
	}
	return nil
}

type RescindResourceOfferMessage struct {
	OfferId          *mesos.OfferID `protobuf:"bytes,1,req,name=offer_id" json:"offer_id,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *RescindResourceOfferMessage) Reset()         { *m = RescindResourceOfferMessage{} }
func (m *RescindResourceOfferMessage) String() string { return proto.CompactTextString(m) }
func (*RescindResourceOfferMessage) ProtoMessage()    {}

func (m *RescindResourceOfferMessage) GetOfferId() *mesos.OfferID {
	if m != nil {
		return m.OfferId
	}
	return nil
}

type ReviveOffersMessage struct {
	FrameworkId      *mesos.FrameworkID `protobuf:"bytes,1,req,name=framework_id" json:"framework_id,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *ReviveOffersMessage) Reset()         { *m = ReviveOffersMessage{} }
func (m *ReviveOffersMessage) String() string { return proto.CompactTextString(m) }
func (*ReviveOffersMessage) ProtoMessage()    {}

func (m *ReviveOffersMessage) GetFrameworkId() *mesos.FrameworkID {
	if m != nil {
		return m.FrameworkId
	}
	return nil
}

type RunTaskMessage struct {
	FrameworkId      *mesos.FrameworkID   `protobuf:"bytes,1,req,name=framework_id" json:"framework_id,omitempty"`
	Framework        *mesos.FrameworkInfo `protobuf:"bytes,2,req,name=framework" json:"framework,omitempty"`
	Pid              *string              `protobuf:"bytes,3,req,name=pid" json:"pid,omitempty"`
	Task             *mesos.TaskInfo      `protobuf:"bytes,4,req,name=task" json:"task,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *RunTaskMessage) Reset()         { *m = RunTaskMessage{} }
func (m *RunTaskMessage) String() string { return proto.CompactTextString(m) }
func (*RunTaskMessage) ProtoMessage()    {}

func (m *RunTaskMessage) GetFrameworkId() *mesos.FrameworkID {
	if m != nil {
		return m.FrameworkId
	}
	return nil
}

func (m *RunTaskMessage) GetFramework() *mesos.FrameworkInfo {
	if m != nil {
		return m.Framework
	}
	return nil
}

func (m *RunTaskMessage) GetPid() string {
	if m != nil && m.Pid != nil {
		return *m.Pid
	}
	return ""
}

func (m *RunTaskMessage) GetTask() *mesos.TaskInfo {
	if m != nil {
		return m.Task
	}
	return nil
}

type KillTaskMessage struct {
	FrameworkId      *mesos.FrameworkID `protobuf:"bytes,1,req,name=framework_id" json:"framework_id,omitempty"`
	TaskId           *mesos.TaskID      `protobuf:"bytes,2,req,name=task_id" json:"task_id,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *KillTaskMessage) Reset()         { *m = KillTaskMessage{} }
func (m *KillTaskMessage) String() string { return proto.CompactTextString(m) }
func (*KillTaskMessage) ProtoMessage()    {}

func (m *KillTaskMessage) GetFrameworkId() *mesos.FrameworkID {
	if m != nil {
		return m.FrameworkId
	}
	return nil
}

func (m *KillTaskMessage) GetTaskId() *mesos.TaskID {
	if m != nil {
		return m.TaskId
	}
	return nil
}

type StatusUpdateMessage struct {
	Update           *StatusUpdate `protobuf:"bytes,1,req,name=update" json:"update,omitempty"`
	Pid              *string       `protobuf:"bytes,2,opt,name=pid" json:"pid,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *StatusUpdateMessage) Reset()         { *m = StatusUpdateMessage{} }
func (m *StatusUpdateMessage) String() string { return proto.CompactTextString(m) }
func (*StatusUpdateMessage) ProtoMessage()    {}

func (m *StatusUpdateMessage) GetUpdate() *StatusUpdate {
	if m != nil {
		return m.Update
	}
	return nil
}

func (m *StatusUpdateMessage) GetPid() string {
	if m != nil && m.Pid != nil {
		return *m.Pid
	}
	return ""
}

type StatusUpdateAcknowledgementMessage struct {
	SlaveId          *mesos.SlaveID     `protobuf:"bytes,1,req,name=slave_id" json:"slave_id,omitempty"`
	FrameworkId      *mesos.FrameworkID `protobuf:"bytes,2,req,name=framework_id" json:"framework_id,omitempty"`
	TaskId           *mesos.TaskID      `protobuf:"bytes,3,req,name=task_id" json:"task_id,omitempty"`
	Uuid             []byte             `protobuf:"bytes,4,req,name=uuid" json:"uuid,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *StatusUpdateAcknowledgementMessage) Reset()         { *m = StatusUpdateAcknowledgementMessage{} }
func (m *StatusUpdateAcknowledgementMessage) String() string { return proto.CompactTextString(m) }
func (*StatusUpdateAcknowledgementMessage) ProtoMessage()    {}

func (m *StatusUpdateAcknowledgementMessage) GetSlaveId() *mesos.SlaveID {
	if m != nil {
		return m.SlaveId
	}
	return nil
}

func (m *StatusUpdateAcknowledgementMessage) GetFrameworkId() *mesos.FrameworkID {
	if m != nil {
		return m.FrameworkId
	}
	return nil
}

func (m *StatusUpdateAcknowledgementMessage) GetTaskId() *mesos.TaskID {
	if m != nil {
		return m.TaskId
	}
	return nil
}

func (m *StatusUpdateAcknowledgementMessage) GetUuid() []byte {
	if m != nil {
		return m.Uuid
	}
	return nil
}

type LostSlaveMessage struct {
	SlaveId          *mesos.SlaveID `protobuf:"bytes,1,req,name=slave_id" json:"slave_id,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *LostSlaveMessage) Reset()         { *m = LostSlaveMessage{} }
func (m *LostSlaveMessage) String() string { return proto.CompactTextString(m) }
func (*LostSlaveMessage) ProtoMessage()    {}

func (m *LostSlaveMessage) GetSlaveId() *mesos.SlaveID {
	if m != nil {
		return m.SlaveId
	}
	return nil
}

type ReconcileTasksMessage struct {
	FrameworkId      *mesos.FrameworkID  `protobuf:"bytes,1,req,name=framework_id" json:"framework_id,omitempty"`
	Statuses         []*mesos.TaskStatus `protobuf:"bytes,2,rep,name=statuses" json:"statuses,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *ReconcileTasksMessage) Reset()         { *m = ReconcileTasksMessage{} }
func (m *ReconcileTasksMessage) String() string { return proto.CompactTextString(m) }
func (*ReconcileTasksMessage) ProtoMessage()    {}

func (m *ReconcileTasksMessage) GetFrameworkId() *mesos.FrameworkID {
	if m != nil {
		return m.FrameworkId
	}
	return nil
}

func (m *ReconcileTasksMessage) GetStatuses() []*mesos.TaskStatus {
	if m != nil {
		return m.Statuses
	}
	return nil
}

type FrameworkErrorMessage struct {
	Message          *string `protobuf:"bytes,2,req,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FrameworkErrorMessage) Reset()         { *m = FrameworkErrorMessage{} }
func (m *FrameworkErrorMessage) String() string { return proto.CompactTextString(m) }
func (*FrameworkErrorMessage) ProtoMessage()    {}

func (m *FrameworkErrorMessage) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type RegisterSlaveMessage struct {
	Slave            *mesos.SlaveInfo `protobuf:"bytes,1,req,name=slave" json:"slave,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *RegisterSlaveMessage) Reset()         { *m = RegisterSlaveMessage{} }
func (m *RegisterSlaveMessage) String() string { return proto.CompactTextString(m) }
func (*RegisterSlaveMessage) ProtoMessage()    {}

func (m *RegisterSlaveMessage) GetSlave() *mesos.SlaveInfo {
	if m != nil {
		return m.Slave
	}
	return nil
}

type ReregisterSlaveMessage struct {
	SlaveId          *mesos.SlaveID        `protobuf:"bytes,1,req,name=slave_id" json:"slave_id,omitempty"`
	Slave            *mesos.SlaveInfo      `protobuf:"bytes,2,req,name=slave" json:"slave,omitempty"`
	ExecutorInfos    []*mesos.ExecutorInfo `protobuf:"bytes,4,rep,name=executor_infos" json:"executor_infos,omitempty"`
	Tasks            []*Task               `protobuf:"bytes,3,rep,name=tasks" json:"tasks,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *ReregisterSlaveMessage) Reset()         { *m = ReregisterSlaveMessage{} }
func (m *ReregisterSlaveMessage) String() string { return proto.CompactTextString(m) }
func (*ReregisterSlaveMessage) ProtoMessage()    {}

func (m *ReregisterSlaveMessage) GetSlaveId() *mesos.SlaveID {
	if m != nil {
		return m.SlaveId
	}
	return nil
}

func (m *ReregisterSlaveMessage) GetSlave() *mesos.SlaveInfo {
	if m != nil {
		return m.Slave
	}
	return nil
}

func (m *ReregisterSlaveMessage) GetExecutorInfos() []*mesos.ExecutorInfo {
	if m != nil {
		return m.ExecutorInfos
	}
	return nil
}

func (m *ReregisterSlaveMessage) GetTasks() []*Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type SlaveRegisteredMessage struct {
	SlaveId          *mesos.SlaveID `protobuf:"bytes,1,req,name=slave_id" json:"slave_id,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *SlaveRegisteredMessage) Reset()         { *m = SlaveRegisteredMessage{} }
func (m *SlaveRegisteredMessage) String() string { return proto.CompactTextString(m) }
func (*SlaveRegisteredMessage) ProtoMessage()    {}

func (m *SlaveRegisteredMessage) GetSlaveId() *mesos.SlaveID {
	if m != nil {
		return m.SlaveId
	}
	return nil
}

type SlaveReregisteredMessage struct {
	SlaveId          *mesos.SlaveID `protobuf:"bytes,1,req,name=slave_id" json:"slave_id,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *SlaveReregisteredMessage) Reset()         { *m = SlaveReregisteredMessage{} }
func (m *SlaveReregisteredMessage) String() string { return proto.CompactTextString(m) }
func (*SlaveReregisteredMessage) ProtoMessage()    {}

func (m *SlaveReregisteredMessage) GetSlaveId() *mesos.SlaveID {
	if m != nil {
		return m.SlaveId
	}
	return nil
}

type UnregisterSlaveMessage struct {
	SlaveId          *mesos.SlaveID `protobuf:"bytes,1,req,name=slave_id" json:"slave_id,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *UnregisterSlaveMessage) Reset()         { *m = UnregisterSlaveMessage{} }
func (m *UnregisterSlaveMessage) String() string { return proto.CompactTextString(m) }
func (*UnregisterSlaveMessage) ProtoMessage()    {}

func (m *UnregisterSlaveMessage) GetSlaveId() *mesos.SlaveID {
	if m != nil {
		return m.SlaveId
	}
	return nil
}

type HeartbeatMessage struct {
	SlaveId          *mesos.SlaveID `protobuf:"bytes,1,req,name=slave_id" json:"slave_id,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *HeartbeatMessage) Reset()         { *m = HeartbeatMessage{} }
func (m *HeartbeatMessage) String() string { return proto.CompactTextString(m) }
func (*HeartbeatMessage) ProtoMessage()    {}

func (m *HeartbeatMessage) GetSlaveId() *mesos.SlaveID {
	if m != nil {
		return m.SlaveId
	}
	return nil
}

type ShutdownFrameworkMessage struct {
	FrameworkId      *mesos.FrameworkID `protobuf:"bytes,1,req,name=framework_id" json:"framework_id,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *ShutdownFrameworkMessage) Reset()         { *m = ShutdownFrameworkMessage{} }
func (m *ShutdownFrameworkMessage) String() string { return proto.CompactTextString(m) }
func (*ShutdownFrameworkMessage) ProtoMessage()    {}

func (m *ShutdownFrameworkMessage) GetFrameworkId() *mesos.FrameworkID {
	if m != nil {
		return m.FrameworkId
	}
	return nil
}

type ShutdownExecutorMessage struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ShutdownExecutorMessage) Reset()         { *m = ShutdownExecutorMessage{} }
func (m *ShutdownExecutorMessage) String() string { return proto.CompactTextString(m) }
func (*ShutdownExecutorMessage) ProtoMessage()    {}

type UpdateFrameworkMessage struct {
	FrameworkId      *mesos.FrameworkID `protobuf:"bytes,1,req,name=framework_id" json:"framework_id,omitempty"`
	Pid              *string            `protobuf:"bytes,2,req,name=pid" json:"pid,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *UpdateFrameworkMessage) Reset()         { *m = UpdateFrameworkMessage{} }
func (m *UpdateFrameworkMessage) String() string { return proto.CompactTextString(m) }
func (*UpdateFrameworkMessage) ProtoMessage()    {}

func (m *UpdateFrameworkMessage) GetFrameworkId() *mesos.FrameworkID {
	if m != nil {
		return m.FrameworkId
	}
	return nil
}

func (m *UpdateFrameworkMessage) GetPid() string {
	if m != nil && m.Pid != nil {
		return *m.Pid
	}
	return ""
}

type RegisterExecutorMessage struct {
	FrameworkId      *mesos.FrameworkID `protobuf:"bytes,1,req,name=framework_id" json:"framework_id,omitempty"`
	ExecutorId       *mesos.ExecutorID  `protobuf:"bytes,2,req,name=executor_id" json:"executor_id,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *RegisterExecutorMessage) Reset()         { *m = RegisterExecutorMessage{} }
func (m *RegisterExecutorMessage) String() string { return proto.CompactTextString(m) }
func (*RegisterExecutorMessage) ProtoMessage()    {}

func (m *RegisterExecutorMessage) GetFrameworkId() *mesos.FrameworkID {
	if m != nil {
		return m.FrameworkId
	}
	return nil
}

func (m *RegisterExecutorMessage) GetExecutorId() *mesos.ExecutorID {
	if m != nil {
		return m.ExecutorId
	}
	return nil
}

type ExecutorRegisteredMessage struct {
	ExecutorInfo     *mesos.ExecutorInfo  `protobuf:"bytes,2,req,name=executor_info" json:"executor_info,omitempty"`
	FrameworkId      *mesos.FrameworkID   `protobuf:"bytes,3,req,name=framework_id" json:"framework_id,omitempty"`
	FrameworkInfo    *mesos.FrameworkInfo `protobuf:"bytes,4,req,name=framework_info" json:"framework_info,omitempty"`
	SlaveId          *mesos.SlaveID       `protobuf:"bytes,5,req,name=slave_id" json:"slave_id,omitempty"`
	SlaveInfo        *mesos.SlaveInfo     `protobuf:"bytes,6,req,name=slave_info" json:"slave_info,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *ExecutorRegisteredMessage) Reset()         { *m = ExecutorRegisteredMessage{} }
func (m *ExecutorRegisteredMessage) String() string { return proto.CompactTextString(m) }
func (*ExecutorRegisteredMessage) ProtoMessage()    {}

func (m *ExecutorRegisteredMessage) GetExecutorInfo() *mesos.ExecutorInfo {
	if m != nil {
		return m.ExecutorInfo
	}
	return nil
}

func (m *ExecutorRegisteredMessage) GetFrameworkId() *mesos.FrameworkID {
	if m != nil {
		return m.FrameworkId
	}
	return nil
}

func (m *ExecutorRegisteredMessage) GetFrameworkInfo() *mesos.FrameworkInfo {
	if m != nil {
		return m.FrameworkInfo
	}
	return nil
}

func (m *ExecutorRegisteredMessage) GetSlaveId() *mesos.SlaveID {
	if m != nil {
		return m.SlaveId
	}
	return nil
}

func (m *ExecutorRegisteredMessage) GetSlaveInfo() *mesos.SlaveInfo {
	if m != nil {
		return m.SlaveInfo
	}
	return nil
}

type ExecutorReregisteredMessage struct {
	SlaveId          *mesos.SlaveID   `protobuf:"bytes,1,req,name=slave_id" json:"slave_id,omitempty"`
	SlaveInfo        *mesos.SlaveInfo `protobuf:"bytes,2,req,name=slave_info" json:"slave_info,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *ExecutorReregisteredMessage) Reset()         { *m = ExecutorReregisteredMessage{} }
func (m *ExecutorReregisteredMessage) String() string { return proto.CompactTextString(m) }
func (*ExecutorReregisteredMessage) ProtoMessage()    {}

func (m *ExecutorReregisteredMessage) GetSlaveId() *mesos.SlaveID {
	if m != nil {
		return m.SlaveId
	}
	return nil
}

func (m *ExecutorReregisteredMessage) GetSlaveInfo() *mesos.SlaveInfo {
	if m != nil {
		return m.SlaveInfo
	}
	return nil
}

type ExitedExecutorMessage struct {
	SlaveId          *mesos.SlaveID     `protobuf:"bytes,1,req,name=slave_id" json:"slave_id,omitempty"`
	FrameworkId      *mesos.FrameworkID `protobuf:"bytes,2,req,name=framework_id" json:"framework_id,omitempty"`
	ExecutorId       *mesos.ExecutorID  `protobuf:"bytes,3,req,name=executor_id" json:"executor_id,omitempty"`
	Status           *int32             `protobuf:"varint,4,req,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *ExitedExecutorMessage) Reset()         { *m = ExitedExecutorMessage{} }
func (m *ExitedExecutorMessage) String() string { return proto.CompactTextString(m) }
func (*ExitedExecutorMessage) ProtoMessage()    {}

func (m *ExitedExecutorMessage) GetSlaveId() *mesos.SlaveID {
	if m != nil {
		return m.SlaveId
	}
	return nil
}

func (m *ExitedExecutorMessage) GetFrameworkId() *mesos.FrameworkID {
	if m != nil {
		return m.FrameworkId
	}
	return nil
}

func (m *ExitedExecutorMessage) GetExecutorId() *mesos.ExecutorID {
	if m != nil {
		return m.ExecutorId
	}
	return nil
}

func (m *ExitedExecutorMessage) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

type ReconnectExecutorMessage struct {
	SlaveId          *mesos.SlaveID `protobuf:"bytes,1,req,name=slave_id" json:"slave_id,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *ReconnectExecutorMessage) Reset()         { *m = ReconnectExecutorMessage{} }
func (m *ReconnectExecutorMessage) String() string { return proto.CompactTextString(m) }
func (*ReconnectExecutorMessage) ProtoMessage()    {}

func (m *ReconnectExecutorMessage) GetSlaveId() *mesos.SlaveID {
	if m != nil {
		return m.SlaveId
	}
	return nil
}

type ReregisterExecutorMessage struct {
	ExecutorId       *mesos.ExecutorID  `protobuf:"bytes,1,req,name=executor_id" json:"executor_id,omitempty"`
	FrameworkId      *mesos.FrameworkID `protobuf:"bytes,2,req,name=framework_id" json:"framework_id,omitempty"`
	Tasks            []*mesos.TaskInfo  `protobuf:"bytes,3,rep,name=tasks" json:"tasks,omitempty"`
	Updates          []*StatusUpdate    `protobuf:"bytes,4,rep,name=updates" json:"updates,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *ReregisterExecutorMessage) Reset()         { *m = ReregisterExecutorMessage{} }
func (m *ReregisterExecutorMessage) String() string { return proto.CompactTextString(m) }
func (*ReregisterExecutorMessage) ProtoMessage()    {}

func (m *ReregisterExecutorMessage) GetExecutorId() *mesos.ExecutorID {
	if m != nil {
		return m.ExecutorId
	}
	return nil
}

func (m *ReregisterExecutorMessage) GetFrameworkId() *mesos.FrameworkID {
	if m != nil {
		return m.FrameworkId
	}
	return nil
}

func (m *ReregisterExecutorMessage) GetTasks() []*mesos.TaskInfo {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *ReregisterExecutorMessage) GetUpdates() []*StatusUpdate {
	if m != nil {
		return m.Updates
	}
	return nil
}

type RegisterProjdMessage struct {
	Project          *string `protobuf:"bytes,1,req,name=project" json:"project,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RegisterProjdMessage) Reset()         { *m = RegisterProjdMessage{} }
func (m *RegisterProjdMessage) String() string { return proto.CompactTextString(m) }
func (*RegisterProjdMessage) ProtoMessage()    {}

func (m *RegisterProjdMessage) GetProject() string {
	if m != nil && m.Project != nil {
		return *m.Project
	}
	return ""
}

type ProjdReadyMessage struct {
	Project          *string `protobuf:"bytes,1,req,name=project" json:"project,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProjdReadyMessage) Reset()         { *m = ProjdReadyMessage{} }
func (m *ProjdReadyMessage) String() string { return proto.CompactTextString(m) }
func (*ProjdReadyMessage) ProtoMessage()    {}

func (m *ProjdReadyMessage) GetProject() string {
	if m != nil && m.Project != nil {
		return *m.Project
	}
	return ""
}

type ProjdUpdateResourcesMessage struct {
	Parameters       *mesos.Parameters `protobuf:"bytes,1,opt,name=parameters" json:"parameters,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *ProjdUpdateResourcesMessage) Reset()         { *m = ProjdUpdateResourcesMessage{} }
func (m *ProjdUpdateResourcesMessage) String() string { return proto.CompactTextString(m) }
func (*ProjdUpdateResourcesMessage) ProtoMessage()    {}

func (m *ProjdUpdateResourcesMessage) GetParameters() *mesos.Parameters {
	if m != nil {
		return m.Parameters
	}
	return nil
}

type FrameworkExpiredMessage struct {
	FrameworkId      *mesos.FrameworkID `protobuf:"bytes,1,req,name=framework_id" json:"framework_id,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *FrameworkExpiredMessage) Reset()         { *m = FrameworkExpiredMessage{} }
func (m *FrameworkExpiredMessage) String() string { return proto.CompactTextString(m) }
func (*FrameworkExpiredMessage) ProtoMessage()    {}

func (m *FrameworkExpiredMessage) GetFrameworkId() *mesos.FrameworkID {
	if m != nil {
		return m.FrameworkId
	}
	return nil
}

type ShutdownMessage struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ShutdownMessage) Reset()         { *m = ShutdownMessage{} }
func (m *ShutdownMessage) String() string { return proto.CompactTextString(m) }
func (*ShutdownMessage) ProtoMessage()    {}

type AuthenticateMessage struct {
	Pid              *string `protobuf:"bytes,1,req,name=pid" json:"pid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AuthenticateMessage) Reset()         { *m = AuthenticateMessage{} }
func (m *AuthenticateMessage) String() string { return proto.CompactTextString(m) }
func (*AuthenticateMessage) ProtoMessage()    {}

func (m *AuthenticateMessage) GetPid() string {
	if m != nil && m.Pid != nil {
		return *m.Pid
	}
	return ""
}

type AuthenticationMechanismsMessage struct {
	Mechanisms       []string `protobuf:"bytes,1,rep,name=mechanisms" json:"mechanisms,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *AuthenticationMechanismsMessage) Reset()         { *m = AuthenticationMechanismsMessage{} }
func (m *AuthenticationMechanismsMessage) String() string { return proto.CompactTextString(m) }
func (*AuthenticationMechanismsMessage) ProtoMessage()    {}

func (m *AuthenticationMechanismsMessage) GetMechanisms() []string {
	if m != nil {
		return m.Mechanisms
	}
	return nil
}

type AuthenticationStartMessage struct {
	Mechanism        *string `protobuf:"bytes,1,req,name=mechanism" json:"mechanism,omitempty"`
	Data             *string `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AuthenticationStartMessage) Reset()         { *m = AuthenticationStartMessage{} }
func (m *AuthenticationStartMessage) String() string { return proto.CompactTextString(m) }
func (*AuthenticationStartMessage) ProtoMessage()    {}

func (m *AuthenticationStartMessage) GetMechanism() string {
	if m != nil && m.Mechanism != nil {
		return *m.Mechanism
	}
	return ""
}

func (m *AuthenticationStartMessage) GetData() string {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return ""
}

type AuthenticationStepMessage struct {
	Data             []byte `protobuf:"bytes,1,req,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AuthenticationStepMessage) Reset()         { *m = AuthenticationStepMessage{} }
func (m *AuthenticationStepMessage) String() string { return proto.CompactTextString(m) }
func (*AuthenticationStepMessage) ProtoMessage()    {}

func (m *AuthenticationStepMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type AuthenticationCompletedMessage struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *AuthenticationCompletedMessage) Reset()         { *m = AuthenticationCompletedMessage{} }
func (m *AuthenticationCompletedMessage) String() string { return proto.CompactTextString(m) }
func (*AuthenticationCompletedMessage) ProtoMessage()    {}

type AuthenticationFailedMessage struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *AuthenticationFailedMessage) Reset()         { *m = AuthenticationFailedMessage{} }
func (m *AuthenticationFailedMessage) String() string { return proto.CompactTextString(m) }
func (*AuthenticationFailedMessage) ProtoMessage()    {}

type AuthenticationErrorMessage struct {
	Error            *string `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AuthenticationErrorMessage) Reset()         { *m = AuthenticationErrorMessage{} }
func (m *AuthenticationErrorMessage) String() string { return proto.CompactTextString(m) }
func (*AuthenticationErrorMessage) ProtoMessage()    {}

func (m *AuthenticationErrorMessage) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func init() {
	proto.RegisterEnum("mesos.internal.StatusUpdateRecord_Type", StatusUpdateRecord_Type_name, StatusUpdateRecord_Type_value)
}
